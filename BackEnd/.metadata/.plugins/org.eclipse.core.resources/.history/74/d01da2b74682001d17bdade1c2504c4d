package com.Ecomerce.API.websocket.controller;

import java.text.ParseException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.Ecomerce.API.exceptions.ResourceNotFoundException;
import com.Ecomerce.API.models.dtos.UserDto;
import com.Ecomerce.API.models.objects.ResponseObject;

@RestController
@RequestMapping(value = "/api")
public class Test {
	@GetMapping("/testSK1")
	public ResponseEntity<ResponseObject> countUsers(
//			@RequestHeader("Authorization") String token
	) throws ResourceNotFoundException, ParseException {
//		String accountname = jwtTokenUtil.getUsernameFromToken(token.substring(7));
		List<UserDto> allUser = new ArrayList<>();
		try {
			allUser = userService.findAllUser();
		} catch (Exception e) {
			throw new ResourceNotFoundException("Thất bại", "Lỗi lấy thông tin user", "");
		}
		if (allUser.isEmpty()) {
			throw new ResourceNotFoundException("Thất bại", "Không tìm thấy user nào", "");
		}
		int count = 0;
		for (UserDto userDto : allUser) {
			if (userDto.getRole() != "ADMIN")
				count++;
		}
		Map<String, Integer> map = new HashMap<>();
		map.put("Count", count);
		return ResponseEntity.status(HttpStatus.OK)
				.body(new ResponseObject("Thành công", "Thống kê số lượng user hiện tại thành công", map));
	}
}
